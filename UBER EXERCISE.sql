1...TO VIEW THE CONTENTS OF THE UBER_RIDE_REQUESTS...

    SELECT *
    FROM UBER_RIDE_REQUESTS;

2...TO CALCULATE THE AVERAGE COST OF EACH REQUEST...

    SELECT REQUEST_STATUS, AVG(MONETARY_COST) AS AVERAGE_COST,
    FROM UBER_RIDE_RQUESTS
    GROUP BY REQUEST_STATUS;

3...FIND THE COST PER CUSTOMER FOR ADVERTISING VIA PUBLIC TRANSPORT...

    USE UBER_ADVERTISING

    SELECT ADVERTISING_CHANNEL, YEAR, (MONEY_SPENT/CUSTOMERS_ACQUIRED) AS COST_PER_CUSTOMER,
    FROM UBER_ADVERTISING
    WHERE ADVERTISING_CHANNEL LIKE '%BUS%'
    GROUP BY ADVERTISING_CHANNEL, YEAR;

4...FIND THE YEAR THAT UBER ACQUIRED MORE THAN 2000 CUSTOMERS THROUGH CELEBRITIES...

    USE UBER_ADVERTISING

    SELECT  YEAR
    FROM UBER_ADVERTISING
    WHERE CUSTOMERS_ACQUIRED > 2000 AND ADVERTISING_CHANNEL LIKE 'CELEBRITIES'


5...TOTAL ORDER PER STATUS PER SERVICE...

    USE UBER_ORDERS
	
	SELECT SERVICE_NAME, STATUS_OF_ORDER, SUM(NUMBER_OF_ORDERS) AS ORDERS_SUM
	FROM UBER_ORDERS
	GROUP BY SERVICE_NAME, STATUS_OF_ORDER;


6...TOTAL MONETARY VALUE PER MONTH/SERVICE...
    
	USE UBER_ORDERS

	SELECT MONTH(ORDER_DATE) AS month,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_BOX' THEN monetary_value
	   END) AS UBER_BOX,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_CLEAN' THEN monetary_value
	   END) AS UBER_CLEAN,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_FOOD' THEN monetary_value
	   END) AS UBER_FOOD,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_GLAM' THEN monetary_value
	   END) AS UBER_GLAM,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_KILAT' THEN monetary_value
	   END) AS UBER_KILAT,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_MART' THEN monetary_value
	   END) AS UBER_MART,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_MASSAGE' THEN monetary_value
	   END) AS UBER_MASSAGE,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_RIDE' THEN monetary_value
	   END) AS UBER_RIDE,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_SEND' THEN monetary_value
	   END) AS UBER-SEND,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_SHOP' THEN monetary_value
	   END) AS UBER_SHOP,
	   SUM(CASE
	      WHEN SERVICE_NAME = 'UBER_TIX' THEN monetary_value
	   END) AS UBER_TIX,
	   FROM UBER_ORDERS
	   WHERE STATUS_OF_ORDER = 'COMPLETED'
	   GROUP BY MONTH(ORDER_DATE);


7...FIND ALL NUMBER PAIRS WHOSE FIRST NUMBER IS SMALLER THAN THE SECOND ONE AND THE PRODUCT OF TWO NUMBERS IS LARGER THAN 11...

       USE TRANSPORTATION_NUMBERS

       SELECT DISTINCT T1.NUMBER, T2.NUMBER
         FROM TRANSPORTATION_NUMBERS T1
        JOIN TRANSPORTATION_NUMBERS T2
       ON T1.NUMBER<T2.NUMBER AND T1.NUMBER*T2.NUMBER > 11;





